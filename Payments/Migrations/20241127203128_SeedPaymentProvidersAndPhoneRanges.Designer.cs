// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Payments.Data;

#nullable disable

namespace Payments.Migrations
{
    [DbContext(typeof(PaymentsDbContext))]
    [Migration("20241127203128_SeedPaymentProvidersAndPhoneRanges")]
    partial class SeedPaymentProvidersAndPhoneRanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Payments.Models.PaymentProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("payment_providers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Оператор мобильной связи",
                            Name = "Билайн"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Оператор мобильной связи",
                            Name = "Мегафон"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Оператор мобильной связи",
                            Name = "МТС"
                        });
                });

            modelBuilder.Entity("Payments.Models.PaymentTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ServiceCategoryId");

                    b.ToTable("payment_transactions", (string)null);
                });

            modelBuilder.Entity("Payments.Models.PhoneNumberRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("EndRange")
                        .HasColumnType("bigint");

                    b.Property<int>("PaymentProviderId")
                        .HasColumnType("integer");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<long>("StartRange")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PaymentProviderId");

                    b.ToTable("phone_number_ranges", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndRange = 6999999L,
                            PaymentProviderId = 1,
                            Prefix = "963",
                            StartRange = 6470000L
                        },
                        new
                        {
                            Id = 2,
                            EndRange = 7999999L,
                            PaymentProviderId = 1,
                            Prefix = "906",
                            StartRange = 7000000L
                        },
                        new
                        {
                            Id = 3,
                            EndRange = 5399999L,
                            PaymentProviderId = 2,
                            Prefix = "936",
                            StartRange = 5000000L
                        },
                        new
                        {
                            Id = 4,
                            EndRange = 9999999L,
                            PaymentProviderId = 3,
                            Prefix = "916",
                            StartRange = 0L
                        });
                });

            modelBuilder.Entity("Payments.Models.ServiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PaymentProviderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PaymentProviderId");

                    b.ToTable("service_categories", (string)null);
                });

            modelBuilder.Entity("Payments.Models.PaymentTransaction", b =>
                {
                    b.HasOne("Payments.Models.ServiceCategory", "ServiceCategory")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServiceCategory");
                });

            modelBuilder.Entity("Payments.Models.PhoneNumberRange", b =>
                {
                    b.HasOne("Payments.Models.PaymentProvider", "PaymentProvider")
                        .WithMany()
                        .HasForeignKey("PaymentProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaymentProvider");
                });

            modelBuilder.Entity("Payments.Models.ServiceCategory", b =>
                {
                    b.HasOne("Payments.Models.PaymentProvider", "PaymentProvider")
                        .WithMany("ServiceCategories")
                        .HasForeignKey("PaymentProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaymentProvider");
                });

            modelBuilder.Entity("Payments.Models.PaymentProvider", b =>
                {
                    b.Navigation("ServiceCategories");
                });

            modelBuilder.Entity("Payments.Models.ServiceCategory", b =>
                {
                    b.Navigation("PaymentTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
